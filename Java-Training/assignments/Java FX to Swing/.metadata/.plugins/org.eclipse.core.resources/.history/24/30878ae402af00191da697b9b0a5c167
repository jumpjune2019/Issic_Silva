import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.*;

public class Main extends JPanel implements ItemListener {
    JCheckBox AlphaButton;
    JCheckBox BetaButton;
    JCheckBox GammaButton;
    StringBuffer choices;
    public Main() {
        super(new BorderLayout());
        //Create the check boxes.
        AlphaButton = new JCheckBox("Alpha");
        AlphaButton.setSelected(true);
        BetaButton = new JCheckBox("Beta");
        BetaButton.setSelected(true);
        GammaButton = new JCheckBox("Gamma");
        GammaButton.setSelected(true);
        //Register a listener for the check boxes.
        AlphaButton.addItemListener(this);
        BetaButton.addItemListener(this);
        GammaButton.addItemListener(this);
        /*Put the check boxes in a column in a panel*/
        
        JPanel checkPanel = new JPanel(new GridLayout(0, 1));
        checkPanel.add(AlphaButton);
        checkPanel.add(BetaButton);
        checkPanel.add(GammaButton);
        add(checkPanel, BorderLayout.LINE_START);
        setBorder(BorderFactory.createEmptyBorder(20,20,20,20));
    }
    /** Listens to the check boxes. */
    public void itemStateChanged(ItemEvent e) {
        int index = 0;
        char c = '-';
        Object source = e.getItemSelectable();
        if (source == AlphaButton) {
            index = 0;
            c = 'c';
        } else if (source == BetaButton) {
            index = 1;
            c = 'g';
        } else if (source == GammaButton) {
            index = 2;
            c = 'h';
        }
        //Now that we know which button was pushed, find out
        //whether it was selected or deselected.
        if (e.getStateChange() == ItemEvent.DESELECTED) {
            c = '-';
        }
        //Apply the change to the string.
        choices.setCharAt(index, c);
  
    }
    /**
     * Create the GUI and show it.  For thread safety,
     * this method should be invoked from the
     * event-dispatching thread.
     */
    private static void createAndShowGUI() {
        //Make sure we have nice window decorations.
        JFrame.setDefaultLookAndFeelDecorated(true);
        //Create and set up the window.
        JFrame frame = new JFrame("SwingCheckBoxDemo");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //Create and set up the content pane.
        JComponent newContentPane = new Main();
        newContentPane.setOpaque(true); //content panes must be opaque
        frame.setContentPane(newContentPane);
        //Display the window.
        frame.pack();
        frame.setVisible(true);
    }
    public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                createAndShowGUI();
            }
        });
    }
}